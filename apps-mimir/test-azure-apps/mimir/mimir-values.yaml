apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mimir
  namespace: mimir
spec:
  values:
    # https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml

    global:
      extraArgs:
        - "-config.expand-env=true"
      extraEnv:
        - name: AZURE_SA_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: mimir-az-sa-access-key
              key: sa-access-key
        - name: AZURE_SA_ACCOUNT_NAME
          valueFrom:
            secretKeyRef:
              name: mimir-az-sa-access-key
              key: sa-account-name

    mimir:
      structuredConfig:
        multitenancy_enabled: false
        limits:
          ingestion_rate: 200000
          ingestion_burst_size: 2000000
          max_global_series_per_user: 0
          out_of_order_time_window: 30m
        server:
          grpc_server_max_recv_msg_size: 104857600
          grpc_server_max_send_msg_size: 104857600
          grpc_server_max_concurrent_streams: 1000
        frontend:
          log_queries_longer_than: 10s
          align_queries_with_step: true
        ingester_client:
          grpc_client_config:
            max_recv_msg_size: 104857600
            max_send_msg_size: 104857600

        common:
          storage:
            backend: azure
            azure:
              account_key: "$${AZURE_SA_ACCOUNT_KEY}" # This is a secret injected via an environment variable
              account_name: $${AZURE_SA_ACCOUNT_NAME} # This is a secret injected via an environment variable
              endpoint_suffix: "blob.core.windows.net"

        blocks_storage:
          backend: azure
          azure:
            container_name: mimir-blocks

        alertmanager_storage:
          azure:
            container_name: mimir-alertmanager

        ruler_storage:
          azure:
            container_name: mimir-ruler

    # https://grafana.com/docs/helm-charts/mimir-distributed/latest/run-production-environment-with-helm/monitor-system-health/#send-metrics-back-into-mimir-or-gem
    metaMonitoring:
      serviceMonitor:
        enabled: true
        clusterLabel: mimir-test
        labels:
          ops_env: test-azure
          ops_name: test-azure-apps
          ops_type: app
          ops_remotewriter: mimir.serviceMonitor
          ops_scope: mimir
      grafanaAgent:
        enabled: true
        installOperator: true
        labels:
          ops_env: test-azure
          ops_name: test-azure-apps
          ops_type: app
          ops_remotewriter: mimir.grafanaAgent
          ops_scope: mimir
        metrics:
          remote:
            url: http://${K_MIMIR_DNS_NAME}/api/v1/push

    rollout_operator:
      enabled: false

    alertmanager:
      nodeSelector:
        node_workload_type: apps
      persistentVolume:
        enabled: true
      replicas: 1
      statefulSet:
        enabled: true

    compactor:
      extraArgs:
        compactor.blocks-retention-period: 7d
      nodeSelector:
        node_workload_type: apps
      persistentVolume:
        size: 50Gi

    distributor:
      replicas: 1
      nodeSelector:
        node_workload_type: apps

    ingester:
      zoneAwareReplication:
        enabled: false
      persistentVolume:
        size: 50Gi
      replicas: 3
      nodeSelector:
        node_workload_type: apps
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: target
                operator: In
                values:
                - ingester
            topologyKey: 'kubernetes.io/hostname'

    minio:
      enabled: false

    overrides_exporter:
      replicas: 1
      nodeSelector:
        node_workload_type: apps

    querier:
      replicas: 2
      nodeSelector:
        node_workload_type: apps

    query_scheduler:
      nodeSelector:
        node_workload_type: apps

    query_frontend:
      replicas: 1
      nodeSelector:
        node_workload_type: apps

    ruler:
      replicas: 1
      nodeSelector:
        node_workload_type: apps

    store_gateway:
      nodeSelector:
        node_workload_type: apps
      zoneAwareReplication:
        enabled: false
      persistentVolume:
        size: 50Gi
      replicas: 1

    rbac:
      create: false

# https://grafana.com/docs/mimir/latest/configure/configure-object-storage-backend/

